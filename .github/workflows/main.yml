name: Deploy Nginx with SBOM Generation

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with persisted credentials
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false  # Disable default token
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use the PAT

      # Step 2: Install Syft
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
          # Add Syft to PATH using Environment Files
          echo "/home/runner/work/nginx-deployment/nginx-deployment/bin" >> $GITHUB_PATH

      # Step 3: Generate SBOM
      - name: Generate SBOM
        run: |
          chmod +x ./scripts/generate-sbom.sh  # Ensure the script is executable
          ./scripts/generate-sbom.sh

      # Step 4: Commit and push the SBOM to the repository
      - name: Commit and push SBOM
        run: |
          if [ -f sbom.json ]; then
            git config --global user.name "vinatu"
            git config --global user.email "l00179000@atu.ie"
            git add sbom.json
            git commit -m "Add generated SBOM"
            git push origin main
          else
            echo "SBOM file not found. Skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # Step 5: Install Argo CD CLI
      - name: Install Argo CD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd

      # Step 6: Deploy to Argo CD
      - name: Deploy to Argo CD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          argocd app sync nginx-app
